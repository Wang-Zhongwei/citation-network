# Generated by Django 4.2.2 on 2023-07-22 20:46

import django.contrib.postgres.fields
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("author", "0001_initial"),
        ("user", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="Paper",
            fields=[
                (
                    "paperId",
                    models.CharField(max_length=255, primary_key=True, serialize=False),
                ),
                ("url", models.URLField(blank=True, null=True)),
                ("title", models.CharField(max_length=255)),
                ("abstract", models.TextField(blank=True, null=True)),
                (
                    "fieldsOfStudy",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.CharField(max_length=255),
                        blank=True,
                        default=list,
                        size=None,
                    ),
                ),
                ("referenceCount", models.IntegerField(null=True)),
                ("citationCount", models.IntegerField(null=True)),
                ("openAccessPdf", models.URLField(blank=True, null=True)),
                (
                    "embedding",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.FloatField(), blank=True, null=True, size=None
                    ),
                ),
                ("tldr", models.TextField(blank=True, null=True)),
                ("publicationDate", models.DateField(blank=True, null=True)),
                (
                    "publicationTypes",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.CharField(max_length=255),
                        blank=True,
                        default=list,
                        size=None,
                    ),
                ),
                (
                    "authors",
                    models.ManyToManyField(
                        blank=True,
                        default=list,
                        related_name="papers",
                        to="author.author",
                    ),
                ),
                (
                    "publicationVenue",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="papers",
                        to="author.publicationvenue",
                    ),
                ),
                (
                    "references",
                    models.ManyToManyField(
                        blank=True,
                        default=list,
                        related_name="citations",
                        to="paper.paper",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Library",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                (
                    "owner",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="libraries",
                        to="user.account",
                    ),
                ),
                (
                    "papers",
                    models.ManyToManyField(
                        blank=True,
                        default=list,
                        related_name="libraries",
                        to="paper.paper",
                    ),
                ),
                (
                    "sharedWith",
                    models.ManyToManyField(
                        blank=True,
                        default=list,
                        related_name="sharedLibraries",
                        to="user.account",
                    ),
                ),
            ],
        ),
    ]
